web_vuln_scanner/
â”œâ”€â”€ app.py              
â”œâ”€â”€ scanner.py          
â”œâ”€â”€ crawler.py         
â”œâ”€â”€ reporter.py        
â”œâ”€â”€ report.pdf          
â”œâ”€â”€ templates/
â”‚   â””â”€â”€ index.html      
â”œâ”€â”€ requirements.txt  
â”œâ”€â”€ __pycache__/        
â””â”€â”€ venv/               

 Component-wise Mini Guide
1. app.py â€“ Flask Web Controller
Entry point for the web interface.

Receives user input (target URL), triggers crawling and scanning.

Displays results on the browser.

Lets users download PDF reports.

2. scanner.py â€“ Vulnerability Engine
Injects test payloads to forms.

Detects:

âœ… XSS (Cross-site Scripting)

âœ… SQL Injection

âœ… CSRF Token presence

Tags each finding with OWASP Top 10 category.

Collects errors, vulnerabilities, and evidence.

3. crawler.py â€“ URL Spider
Recursively crawls the submitted site.

Gathers all internal links within the domain.

Helps in scanning more than just the homepage.

4. reporter.py â€“ PDF Report Generator
Converts the scan results to a well-formatted PDF report.

Includes:

Target URL

List of XSS, SQLi, CSRF findings

Errors (if any)

OWASP mapping

5. templates/index.html â€“ Frontend UI
Clean and modern HTML interface with SARO branding.

Form to submit the website URL.

Cards for each scanned page showing:

Vulnerabilities

 Status (safe/vulnerable)

 Link to download report

6. report.pdf â€“ Output File (Generated)
PDF version of the latest scan result.

Automatically created on every scan.

7. requirements.txt â€“ Dependency Tracker
Stores all Python libraries used.

Ensures portability and reproducibility:

flask
requests
beautifulsoup4
reportlab
8. venv/ â€“ Python Virtual Environment
Isolated space for running the scanner.

Keeps project dependencies separate from system Python.

 How to Run the Project
âœ… Step 1: Clone and Setup

git clone https://github.com/yourusername/web_vuln_scanner.git
cd web_vuln_scanner
python3 -m venv venv
source venv/bin/activate
âœ… Step 2: Install Dependencies
Copy code
pip install -r requirements.txt
âœ… Step 3: Start the Web App

Copy code
python app.py
âœ… Step 4: Open in Browser
Visit:
http://127.0.0.1:5000
  Start scanning by entering a site like:
ðŸ”— https://testphp.vulnweb.com
